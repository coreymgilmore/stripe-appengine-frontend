v4.0.0
----------
- complete redo of codebase to support appengine generation 2 (standard environment) runtime.
    - new import paths to Google APIs.
    - Google APIs changed a bit so codebase was changed to work correctly.
    - removed need for specific appengine code in main.go.
    - no more memcache (not available as of Nov. 2018 in gen 2 runtime).
    - no more urlfetch, use normal golang http library.
    - app.yaml configuration changed a bit.  less appengine specific stuff (static files).
- allow using Cloud Datastore for development as well as production
    - there isn't really a "dev server" anymore for development and you can't interact with the Datastore Emulator.
    - this keeps the UI for inspecting the datastore the same between dev and prod settings.
- support for newest Stripe library (52.1.0)
    - changes required some rewriting of codebase to work correctly.
- allow setting of more configuration options in app.yaml.
    - so user's don't have to edit code.
    - ex: stripe public key, used have to set this in .js file.
    - allow using non-cdn static vendor files (bootstrap, jquery, etc.).  useful if serving from a non-appengine environment (see below) or you want to simply serve files from less domains.
    - session lifetime, cookie domain, etc.
    - a lot more configuration options and easier to set than editing code.
- use regex to validate customer id when adding a new card
    - makes sure users are typing in correctly formatted id from a crm.
- allow settings of timezone for reports and receipts.
    - setting in app settings.
    - makes reports and receipts use timezone more familiar to users than yyyy-mm-ddThh:mm:ss.000z UTC time

- support for non-appengine installs.
    - **still working on this but is a work in progress**
    - uses SQLite as the database instead of Google Cloud Datastore.
    - since appengine gen. 2 uses no appengine-specific code, this became a viable option.
    - allows for migrating off of appengine (minus data migration) in case appengine becomes too expensive or changes the api heavily (again).
    - uses app.yaml for configuration so users don't have to set environmental variables.
        - same config as when deploying on appengine for ease-of-migration.
    - this required a lot of work with "if appengine else sqlite" for db queries.
- redo of some of gui to be more consistent and nicer.
- lots of other code redo, clean up, etc.

V3.1.2
------------
- fix bug with timeout when adding card
    - never saw this issue with a timeout when adding a card until today.  Card being added
      was for Singapore so maybe there is some extra fraud checks that take a while.  Call 
      to add card took 9.3 seconds; increased timeout for context fixes this issue.
    - issue could also be due to slow network somewhere.

V3.1.1
-------------
- fix some non important bugs/typos


V3.1.0
-------------
- new minor version due to new functionality being added

- auto remove expired cards
    - this is a cron task that runs on the first of every month
    - this will remove cards that expired in the previous month
    - this task can be manually run by browsing to same endpoint
        - used for removing cards with an older than previous month expiration
    - note new index added

- enable automatically charging cards using API request
    - generate and show API key in GUI so user can grab API and use in their application making the charge request.
    - handle authentication of API requests to charge a card.
    - process charges automatically when an API request is made.
    - this is served off a different endpoint to keep things separate and b/c of different authentication requirements.

V3.0.0
-------------
- new major version number due to huge amount of changes.

- a huge rework of the app.
    - lots of code cleanup.
    - lots of code reorganization.
    - better commenting.
    - better code structure.
    - better styling of code per golang style guide.
    - update UI styling.

- use golang context package instead of appengine context package where possible.

- more company settings to separate package.
    - used to be part of receipt package.
    - separate package to clean up code base and allow for future changes.

- company settings now has fee rates
    - fees that Stripe bills
    - used in calculation on charges table in report.

- use newest jQuery, Bootstrap, and Stripe API.

- move statement descriptor from app.yaml environmental variable to setting in company info.
    - this allow for changes "on the fly"
    - doesn't require editting app.yaml and republishing app.

- implement app settings.
    - similar to company settings, but for stuff that influences the app.
    - example: requiring customer id when adding a card.  Used to have to do this via change in HTML code.

- show alerts if company info and statement descriptor aren't set.
    - since statement descriptor moved from app.yaml to datastore, make sure a new value is set.
    - make sure company info data is set for receipts.

- report
    - shows total charges less fees
    - aligns amounts correctly
    - shows total refunds




V2.1.0
-------------
- reorganized all file per App Engine best practices.
    - organized into "project and services" style.
    - see https://cloud.google.com/appengine/docs/standard/go/an-overview-of-app-engine
    - and https://cloud.google.com/appengine/docs/standard/go/runtime

- now using Google Cloud SDK to develop and deploy
    - no longer using "goapp serve" and "goapp deploy"
    - this results in no longer needing the "application" or "version" lines in app.yaml.

- renamed "transfers" to "payouts" in the reports
    - per changes in stripe.


V2.0.1
-------------
- renamed version V2 to V2.0.0

- add some better logging
    - try to see if Stripe passes back any more useful information when a card is not accepted or declined
        - so we can present more useful information in the GUI rather than just "card was declined"
    - to better understand some edge case errors
    - secure the cron task that removes expired cards

- fix bug where report was not showing who processed a charge or refund


V2.0.0
-------------
- use init() function to initialize packages instead of calling another function (i.e. package.Init())
    - this clean up code
    - makes code more "golang" styled
    - remove "initialization" from app.go's init() func.

- store config stuff in environmental variables in app.yaml
    - **this is a breaking change**
    - remove need for creating txt files for session keys, stripe key, and statement descriptor.
    - uses standard appengine abilities instead of having to read from files
    - cleans up code base

- clean up code everywhere
    - better documentation
    - better styling and formatting

- remove some external dependencies and include them as local packages instead
    - less dependencies

- add "charge and remove" feature
    - allows users to charge and remove a card all in one step
    - used for one-time cards or times when a customer only wants to use a card once
    - just removes need for choosing "charge" then "remove"

- automatially remove expired card
    - a cron task runs on the first of the month and removes any card that has expired